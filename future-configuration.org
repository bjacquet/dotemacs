#+TITLE: Bruno Jacquet's Emacs configuration
#+AUTHOR: Bruno Jacquet
#+STARTUP: showeverything
#+TOC: true

# inspiration:
# - https://github.com/munen/emacs.d/blob/master/configuration.org
# - https://github.com/jamiecollinson/dotfiles/blob/master/config.org/
# - http://pages.sachachua.com/.emacs.d/Sacha.html

My Emacs configuration used to span across multiple files, one per major
mode. My goal on this literate programming attempt is to make the configuration
more easier to search, and change; remove unecessary logic; cleanup unused
packages; speedup loading time; and follow the steps of the great Donald Knuth.

* Setup

** Package sources

The repositories from which we'll download packages and where packages are stored.

#+BEGIN_SRC emacs-lisp
(require 'package)
(setq package-user-dir (expand-file-name "~/.emacs.d/future-packages/")
      package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))
(package-initialize)
#+END_SRC

If ~use-package~ isn't installed, install it.

#+BEGIN_SRC emacs-lisp
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(setq use-package-verbose t
      use-package-always-ensure t)

(eval-when-compile
  (require 'use-package))
#+END_SRC

Some packages don't come through `use-pacakge`.

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path (expand-file-name "~/.emacs.d/my-packages/"))
#+END_SRC

** Packages to be installed

List all packages to install regardless of the system we are at. Additional package configuration is defined further down in this file.

#+BEGIN_SRC emacs-lisp
(defvar my-packages '(ag
                      all-the-icons
                      all-the-icons-dired
                      auto-complete
                      birds-of-paradise-plus-theme
                      bm
                      color-theme-modern
                      darkroom
                      darktooth-theme
                      dashboard
                      deft
                      detour
                      expand-region
                      flychek
                      flyspell-popup
                      golden-ratio
                      goto-last-change
                      handlebars-mode
                      handlebars-sgml-mode
                      haskell-mode
                      htmlize
                      ido-vertical-mode
                      js-react-redux-yasnippets
                      json-mode
                      jsx-mode
                      markdown-mode
                      multiple-cursors
                      naquadah-theme
                      org-pomodoro
                      pager
                      panda-theme
                      paredit
                      ranger
                      react-snippets
                      rinari
                      robe
                      rust-mode
                      shrink-whitespace
                      slim-mode
                      smart-mode-line
                      sr-speedbar
                      treemacs-icons-dired
                      treemacs-magit
                      treemacs-projectile
                      undo-tree
                      winpoint
                      wn-mode
                      yasnippet
                      yasnippet-snippets
))
#+END_SRC

* System information

Configurations change depending on which system I am at.

#+begin_src emacs-lisp
(defvar mac-p (or (eq window-system 'ns) (eq window-system 'mac)))
(defvar icapital (and mac-p (string-match (system-name) "sagittarius.local")))
#+end_src

Change macOS modifier keys â€” to avoid muscle memory loss.

#+begin_src emacs-lisp
(when mac-p
  (setq mac-option-key-is-meta  nil)
  (setq mac-command-key-is-meta t)
  (setq mac-command-modifier    'meta)
  (setq mac-option-modifier     nil))
#+end_src

* Default Settings

Configurations for built-in Emacs features.

** Do not auto save files

#+begin_src emacs-lisp
(setq auto-save-default nil)
#+end_src

** Blink cursor forever

#+begin_src emacs-lisp
(setq blink-cursor-blinks 0)
#+end_src

** Use UTF as coding system

#+begin_src emacs-lisp
(setq current-language-environment "UTF-8")
#+end_src

** Pop-up backtrace buffer on error

#+begin_src emacs-lisp
(setq debug-on-error t)
#+end_src


** Set input method

#+begin_src emacs-lisp
(setq default-input-method "portuguese-prefix")
#+end_src

*** Wrap columns on 80 characters

#+begin_src emacs-lisp
(setq fill-column 80)
#+end_src


** Show line number in modeline

#+begin_src emacs-lisp
(setq line-number-mode t)
#+end_src

*** Do not make backup files

#+begin_src emacs-lisp
(setq make-backup-files nil)
#+end_src

** End files with new line

#+begin_src emacs-lisp
(setq require-final-newline t)
#+end_src

** Replace audible bell with visible bell

#+begin_src emacs-lisp
(setq ring-bell-function 'ignore)
(setq visible-bell t)
#+end_src

** Do not show the tool bar

#+begin_src emacs-lisp
(tool-bar-mode -1)
#+end_src

** User information

#+begin_src emacs-lisp
(setq user-full-name "Bruno Jacquet")
(setq user-mail-address (or (and icapital
                                 (rot13-string "o.wnpdhrg@ehagvzr-eribyhgvba.pbz"))
                            (rot13-string "oehawnpg@cebgbaznvy.pbz")))
#+end_src

** Frame title

Set the frame tile to filename and path or buffer name.

#+begin_src emacs-lisp
(setq frame-title-format '((:eval (if (buffer-file-name)
                                      (abbreviate-file-name (buffer-file-name))
                                      "%b"))))
#+end_src

** Ask y/n instead of yes/no

This is a favorable shorthand.

#+begin_src emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
#+end_src

** Enable Narrow To Region

Enable narrow-to-region (~C-x n n~ / ~C-x n w~).

#+begin_src emacs-lisp
(put 'narrow-to-region 'disabled nil)
#+end_src

** Enable Upcase Region

Enable upcase-region (~C-x C-u~).

#+begin_src emacs-lisp
(put 'upcase-region 'disabled nil)
#+end_src

** Enable Downcase Region

Enable downcase-region (~C-x C-l~)
#+begin_src emacs-lisp
(put 'downcase-region 'disabled nil)
#+end_src

** ~dired-mode~

Ability to use ~a~ to visit a new directory or file in dired instead of using ~RET~. ~RET~ works just fine, but it will create a new buffer for every interaction whereas ~a~ reuses the current buffer.

#+begin_src emacs-lisp
(put 'dired-find-alternate-file 'disabled nil)
#+end_src

Human readable units

#+begin_src emacs-lisp
(setq-default dired-listing-switches "-alh")
#+end_src

* General configuration

Package configuration common to all systems.

** Auto-complete

** BM (visual bookmarks)

** Darkroom

** Deft

** Detour

** Expand Region

** Flyspell



* Programming

Configuration specific to programming.

* Appearance

Look ~and feel~ configurations.

* Email

I'm trying to use Emacs as email client. The configuration is far from complete as I yet can't send emails.

* Runtime Revolution

Configurations specific to the workplace.
